; compiling (LET (#) ...)
; compiling (QUICKLISP-CLIENT:QUICKLOAD :STREAMS)To load "streams":
  Load 1 ASDF system:
    streams
; Loading "streams"
........

CL-USER> (in-package :streams/expr)
#<PACKAGE "STREAMS/EXPR">
; compiling (DEFUN =MSL-VALUE ...)
WARNING: redefining STREAMS/EXPR::=MSL-VALUE in DEFUN
; compiling (DEFUN =@-FORM ...)
WARNING: redefining STREAMS/EXPR::=@-FORM in DEFUN

STREAMS/EXPR> (parse "(@WALT)" (=@-form))
NIL
NIL
NIL
; compiling (DEFUN =MSL-VALUE ...)
STREAMS/EXPR> (parse "(@WALT)" (=@-form))

NIL
NIL
NIL

STREAMS/EXPR> (parse "(@WALT Walt Disney)" (=@-form))
NIL
NIL
NIL
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT Walt Disney)" (=@-form))

NIL
NIL
NIL
; compiling (DEFUN =REGEX-GETTER ...)
WARNING: redefining STREAMS/EXPR::=REGEX-GETTER in DEFUN
; compiling (DEFUN =METADATA-GETTER ...)
WARNING: redefining STREAMS/EXPR::=METADATA-GETTER in DEFUN

STREAMS/EXPR> (parse "(@WALT Walt Disney :birthday 1901 :wife Lillian #50d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c //comment)" (=@-form))
(("@" "WALT") "Walt Disney"
 (((":" "birthday") "1901") ((":" "wife") "Lillian"))
 "50d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c" "comment")
T
T

STREAMS/EXPR> (parse "(@WALT Walt Disney :birthday 1901 :wife Lillian #50d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c //comment)" (=@-form))
(("@" "WALT") "Walt Disney"
 (((":" "birthday") "1901") ((":" "wife") "Lillian"))
 "50d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c" "comment")
T
T

STREAMS/EXPR> (parse "(@WALT Walt Disney #50d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c //comment)" (=@-form))
NIL
NIL
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime14
; in: DEFUN =@-FORM
;     (STREAMS/EXPR::=METADATA-GETTER (STREAMS/EXPR::=MSL-VALUE))
;
; caught STYLE-WARNING:
;   The function =METADATA-GETTER is called with one argument, but wants exactly zero.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT Walt Disney #50d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c //comment)" (=@-form))

(("@" "WALT") "Walt Disney" NIL
 "50d858e0985ecc7f60418aaf0cc5ab587f42c2570a884095a9e8ccacd0f6545c" "comment")
T
T

STREAMS/EXPR> (parse "(@WALT)" (=@-form))
(("@" "WALT") NIL NIL NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday)" (=@-form))
NIL
NIL
NIL
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT :birthday)" (=@-form))

(("@" "WALT") NIL ((":" "birthday") NIL) NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday 1901)" (=@-form))
(("@" "WALT") NIL (((":" "birthday") "1901")) NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT)" (=@-form))
(("@" "WALT") NIL NIL NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday 1901 :wife Lillian)" (=@-form))
(("@" "WALT") NIL (((":" "birthday") "1901") ((":" "wife") "Lillian")) NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday 1901 :wife Lillian //comment)" (=@-form))
(("@" "WALT") NIL (((":" "birthday") "1901") ((":" "wife") "Lillian")) NIL
 "comment")
T
T

STREAMS/EXPR> (parse "(@WALT //comment)" (=@-form))
(("@" "WALT") NIL NIL NIL "comment")
T
T
; compiling (DEFUN =MSL-VALUE ...)
STREAMS/EXPR> (parse "(@WALT //comment)" (=@-form))

(("@" "WALT") NIL NIL NIL "comment")
T
T

STREAMS/EXPR> (parse "(@WALT :birthday 1901 :wife Lillian)" (=@-form))
(("@" "WALT") NIL (((":" "birthday") "1901") ((":" "wife") "Lillian")) NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday 1901 /regex/ :wife Lillian)" (=@-form))
NIL
NIL
NIL
; compiling (DEFUN =MSL-VALUE ...)

; file: C:/Users/David/AppData/Local/Temp/slime19
; in: DEFUN =MSL-VALUE
;     (MAXPC:%ANY STREAMS/EXPR::REGEX-GETTER/PARSER)
;
; caught WARNING:
;   undefined variable: STREAMS/EXPR::REGEX-GETTER/PARSER
;
; compilation unit finished
;   Undefined variable:
;     REGEX-GETTER/PARSER
;   caught 1 WARNING condition
; compiling (DEFUN =MSL-VALUE ...)
STREAMS/EXPR> (parse "(@WALT :birthday 1901 /regex/ :wife Lillian)" (=@-form))

(("@" "WALT") NIL (((":" "birthday") (("regex" "" NIL))) ((":" "wife") NIL))
 NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday 1901 /regex/env :wife Lillian)" (=@-form))
(("@" "WALT") NIL (((":" "birthday") (("regex" "env" NIL))) ((":" "wife") NIL))
 NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday 1901 /regex/env consume :wife Lillian)" (=@-form))
(("@" "WALT") NIL
 (((":" "birthday") (("regex" "env" "consume"))) ((":" "wife") NIL)) NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT /regex/env consume :wife Lillian)" (=@-form))
NIL
NIL
NIL

STREAMS/EXPR> (parse "(@WALT Walt Disney /regex/env consume :wife Lillian)" (=@-form))
(("@" "WALT") (("regex" "env" "consume")) (((":" "wife") NIL)) NIL NIL)
T
T
; compiling (DEFUN =MSL-VALUE ...)
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime22
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-REGEX
;                          STREAMS/EXPR::SUB-LIST STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_ STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-VALUE))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=REGEX-GETTER))
;                      (MAXPC:%MAYBE (MAXPC:%OR (MAXPC:%SOME #) (MAXPC:=LIST # #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT)) (MAXPC:?EQ #\))
;                      (MAXPC:?END))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::SUB-LIST STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G4
;           (SB-C::CHECK-DS-LIST #:|result0| 9 9
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-REGEX
;                                  STREAMS/EXPR::SUB-LIST STREAMS/EXPR::HASH
;                                  STREAMS/EXPR::COMMENT #:|_2| #:|_3|)))
;          (#:|_1| (POP #:G4))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G4))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G4))
;          (STREAMS/EXPR::ATOM-REGEX (POP #:G4))
;          (STREAMS/EXPR::SUB-LIST (POP #:G4))
;          (STREAMS/EXPR::HASH (POP #:G4))
;          (STREAMS/EXPR::COMMENT (POP #:G4))
;          (#:|_2| (POP #:G4))
;          (#:|_3| (POP #:G4)))
;     (DECLARE (IGNORE #:|_3| #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::SUB-LIST STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT))
;
; caught STYLE-WARNING:
;   The variable ATOM-REGEX is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT Walt Disney /regex/env consume :wife Lillian)" (=@-form))

(("@" "WALT") "Walt Disney" ("regex" "env" "consume")
 (((":" "wife") "Lillian")) NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT Walt Disney /regex/env consume :wife Lillian /regex2/env2 consume2)" (=@-form))

NIL
NIL
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime25
; in: DEFUN =@-FORM
;     (MAXPC:%MAYBE
;      (MAXPC:%OR
;       (MAXPC:%SOME
;        (MAXPC:=LIST (STREAMS/EXPR::=METADATA-GETTER) (STREAMS/EXPR::=MSL-VALUE)
;                     (MAXPC:%MAYBE #))))
;      (MAXPC:=LIST (STREAMS/EXPR::=METADATA-GETTER)
;                   (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-VALUE))))
;
; caught STYLE-WARNING:
;   The function %MAYBE is called with two arguments, but wants exactly one.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT Walt Disney /regex/env consume :wife Lillian /regex2/env2 consume2)" (=@-form))

(("@" "WALT") "Walt Disney" ("regex" "env" "consume")
 (((":" "wife") "Lillian" ("regex2" "env2" "consume2"))) NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT Walt Disney /regex/env consume :wife Lillian /regex2/env2 consume2 /regex3/env3 consume3)" (=@-form))
NIL
NIL
NIL
; compiling (DEFUN =@-FORM ...)
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT Walt Disney /regex/env consume :wife Lillian /regex2/env2 consume2 /regex3/env3 consume3)" (=@-form))

(("@" "WALT") "Walt Disney" (("regex" "env" "consume"))
 (((":" "wife") "Lillian"
   (("regex2" "env2" "consume2") ("regex3" "env3" "consume3"))))
 NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT Walt Disney /regex/env consume :wife Lillian /regex2/env2 consume2 /regex3/env3 consume3 :species human /regex4/)" (=@-form))
(("@" "WALT") "Walt Disney" (("regex" "env" "consume"))
 (((":" "wife") "Lillian"
   (("regex2" "env2" "consume2") ("regex3" "env3" "consume3")))
  ((":" "species") "human" (("regex4" "" NIL))))
 NIL NIL)
T
T
; compiling (DEFUN =REGEX-GETTER ...)

; file: C:/Users/David/AppData/Local/Temp/slime29
; in: DEFUN =REGEX-GETTER
;     (STREAMS/EXPR::?SUBSEQ (MAXPC:%SOME (MAXPC:?SATISFIES 'ALPHANUMERICP)))
;
; caught STYLE-WARNING:
;   undefined function: STREAMS/EXPR::?SUBSEQ
;
; compilation unit finished
;   Undefined function:
;     ?SUBSEQ
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN =REGEX-GETTER ...)
STREAMS/EXPR> (parse "(@WALT Walt Disney /regex/env consume :wife Lillian /regex2/env2 consume2 /regex3/env3 consume3 :species human /regex4/)" (=@-form))

(("@" "WALT") "Walt Disney" (("regex" "env" "consume"))
 (((":" "wife") "Lillian"
   (("regex2" "env2" "consume2") ("regex3" "env3" "consume3")))
  ((":" "species") "human" (("regex4" NIL NIL))))
 NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-format))
; in: PARSE "(@WALT /regex/)"
;     (STREAMS/EXPR::=@-FORMAT)
;
; caught STYLE-WARNING:
;   undefined function: STREAMS/EXPR::=@-FORMAT
;
; compilation unit finished
;   Undefined function:
;     =@-FORMAT
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-form))
(("@" "WALT") NIL (("regex" NIL NIL)) NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime31
; in: DEFUN =@-FORM
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           (APPEND "/" STREAMS/EXPR::ATOM-REGEX) STREAMS/EXPR::SUB-LIST
;           STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT)
;
; note: deleting unreachable code

;     (APPEND "/" STREAMS/EXPR::ATOM-REGEX)
; ==>
;   (SB-IMPL::APPEND2 "/" STREAMS/EXPR::ATOM-REGEX)
;
; caught WARNING:
;   Constant "/" conflicts with its asserted type LIST.
;   See also:
;     The SBCL Manual, Node "Handling of Types"
;
; compilation unit finished
;   caught 1 WARNING condition
;   printed 1 note
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime32
; in: DEFUN =@-FORM
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           (APPEND '/ STREAMS/EXPR::ATOM-REGEX) STREAMS/EXPR::SUB-LIST
;           STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT)
;
; note: deleting unreachable code

;     (APPEND '/ STREAMS/EXPR::ATOM-REGEX)
; ==>
;   (SB-IMPL::APPEND2 '/ STREAMS/EXPR::ATOM-REGEX)
;
; caught WARNING:
;   Constant / conflicts with its asserted type LIST.
;   See also:
;     The SBCL Manual, Node "Handling of Types"
;
; compilation unit finished
;   caught 1 WARNING condition
;   printed 1 note
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-form))

(("@" "WALT") NIL ((("regex" NIL NIL))) (("regex" NIL NIL)) NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-form))

(("@" "WALT") NIL (/ ("regex" NIL NIL)) (("regex" NIL NIL)) NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-form))

(("@" "WALT") NIL (/ ("regex" NIL NIL)) (/ ("regex" NIL NIL)) NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime36
; in: DEFUN =@-FORM
;     (PUSH STREAMS/EXPR::ATOM-REGEX '/)
; --> LET* FUNCALL
; ==>
;   (SB-C::%FUNCALL #'(SETF QUOTE) #:NEW1 #:/5)
;
; caught WARNING:
;   The function (SETF QUOTE) is undefined, and its name is reserved by ANSI CL so
;   that even if it were defined later, the code doing so would not be portable.
;
; compilation unit finished
;   Undefined function:
;     (SETF QUOTE)
;   caught 1 WARNING condition
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-form))

(("@" "WALT") NIL (/ ("regex" NIL NIL)) (/ ("regex" NIL NIL)) NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-form))

(("@" "WALT") NIL (/ ("regex" NIL NIL)) NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-form))

(("@" "WALT") NIL (("regex" NIL NIL)) NIL NIL NIL)
T
T

STREAMS/EXPR> (append (list '/) (list 'a 'b))
(/ A B)
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime40
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-REGEX
;                          STREAMS/EXPR::SUB-LIST STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_ STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-VALUE))
;                      (MAXPC:%MAYBE (MAXPC:%SOME (STREAMS/EXPR::=REGEX-GETTER)))
;                      (MAXPC:%MAYBE (MAXPC:%OR (MAXPC:%SOME #) (MAXPC:=LIST # #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT)) (MAXPC:?EQ #\))
;                      (MAXPC:?END))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE 'STREAMS/EXPR::ZIP
;             STREAMS/EXPR::SUB-LIST STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G4
;           (SB-C::CHECK-DS-LIST #:|result0| 9 9
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-REGEX
;                                  STREAMS/EXPR::SUB-LIST STREAMS/EXPR::HASH
;                                  STREAMS/EXPR::COMMENT #:|_2| #:|_3|)))
;          (#:|_1| (POP #:G4))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G4))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G4))
;          (STREAMS/EXPR::ATOM-REGEX (POP #:G4))
;          (STREAMS/EXPR::SUB-LIST (POP #:G4))
;          (STREAMS/EXPR::HASH (POP #:G4))
;          (STREAMS/EXPR::COMMENT (POP #:G4))
;          (#:|_2| (POP #:G4))
;          (#:|_3| (POP #:G4)))
;     (DECLARE (IGNORE #:|_3| #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE 'STREAMS/EXPR::ZIP
;           STREAMS/EXPR::SUB-LIST STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT))
;
; caught STYLE-WARNING:
;   The variable ATOM-REGEX is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (append (list '/) (list 'a 'b))
(/ A B)

STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-form))
(("@" "WALT") NIL ZIP NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/)" (=@-form))

(("@" "WALT") NIL (ZIP ("regex" NIL NIL)) NIL NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT /regex/ /regex2/)" (=@-form))
(("@" "WALT") NIL (ZIP ("regex" NIL NIL) ("regex2" NIL NIL)) NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/ /regex2/)" (=@-form))

(("@" "WALT") NIL (/ ("regex" NIL NIL) ("regex2" NIL NIL)) NIL NIL NIL)
T
T
;
; caught ERROR:
;   READ error during COMPILE-FILE:
;
;     illegal terminating character after a colon: #\"
;
;       Line: 22, Column: 36, File-Position: 1039
;
;       Stream: #<SB-INT:FORM-TRACKING-STREAM for "file C:\\Users\\David\\AppData\\Local\\Temp\\slime43" {1004359BF3}>
;
; compilation unit finished
;   caught 1 fatal ERROR condition
;   caught 1 ERROR condition
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/ /regex2/)" (=@-form))

(("@" "WALT") NIL ("/" ("regex" NIL NIL) ("regex2" NIL NIL)) NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/ /regex2/)" (=@-form))

(("@" "WALT") NIL (("regex" NIL NIL) ("regex2" NIL NIL)) NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT /regex/ /regex2/)" (=@-form))

(("@" "WALT") NIL ("/" (("regex" NIL NIL) ("regex2" NIL NIL))) NIL NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday /regex/ /regex2/)" (=@-form))
NIL
NIL
NIL
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT :birthday /regex/ /regex2/)" (=@-form))

NIL
NIL
NIL

STREAMS/EXPR> (parse "(@WALT :birthday /regex/ consume /regex2/)" (=@-form))
NIL
NIL
NIL

STREAMS/EXPR> (parse "(@WALT :birthday /regex/expr consume /regex2/)" (=@-form))
NIL
NIL
NIL

STREAMS/EXPR> (parse "(@WALT :birthday /regex/expr consume)" (=@-form))
NIL
NIL
NIL

STREAMS/EXPR> (parse "(@WALT)" (=@-form))
(("@" "WALT") NIL ("/" NIL) NIL NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday)" (=@-form))
(("@" "WALT") NIL ("/" NIL) ((":" "birthday") NIL) NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday /regexr/)" (=@-form))
NIL
NIL
NIL

STREAMS/EXPR> (parse "(@WALT /regexr/)" (=@-form))
(("@" "WALT") NIL ("/" (("regexr" NIL NIL))) NIL NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT /regexr/ /rexer2)" (=@-form))
(("@" "WALT") NIL ("/" (("regexr" NIL "/rexer2"))) NIL NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT /regexr/ /rexer2/)" (=@-form))
(("@" "WALT") NIL ("/" (("regexr" NIL NIL) ("rexer2" NIL NIL))) NIL NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT Walt Disney /regexr/ /rexer2/)" (=@-form))
(("@" "WALT") "Walt Disney" ("/" (("regexr" NIL NIL) ("rexer2" NIL NIL))) NIL
 NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday)" (=@-form))
(("@" "WALT") NIL ("/" NIL) ((":" "birthday") NIL) NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT :birthday /regex/)" (=@-form))
NIL
NIL
NIL
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse "(@WALT :birthday /regex/)" (=@-form))

(("@" "WALT") NIL ("/" NIL) ((":" "birthday") NIL (("regex" NIL NIL))) NIL NIL)
T
T

STREAMS/EXPR> (parse "(@WALT /waltregex/waltenv waltconsume :birthday /bdayregex/bdayenv bdayconsume)" (=@-form))
(("@" "WALT") NIL ("/" (("waltregex" "waltenv" "waltconsume")))
 ((":" "birthday") NIL (("bdayregex" "bdayenv" "bdayconsume"))) NIL NIL)
T
T

STREAMS/EXPR> 
