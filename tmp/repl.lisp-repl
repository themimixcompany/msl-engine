; compiling (LET (#) ...)
; compiling (QUICKLISP-CLIENT:QUICKLOAD :STREAMS)To load "streams":
  Load 1 ASDF system:
    streams
; Loading "streams"
........
; compiling (QUICKLISP-CLIENT:QUICKLOAD :STREAMS)To load "streams":
  Load 1 ASDF system:
    streams
; Loading "streams"
...

CL-USER> (in-package :streams/expr)
#<PACKAGE "STREAMS/EXPR">

STREAMS/EXPR> (parse-msl "(@movie (@snow-white) :author (@walt) (f technicolor))")
(("@" "movie") ((("@" "snow-white") NIL NIL NIL NIL NIL)) NIL
 (((":" "author") ((("@" "walt") NIL NIL NIL NIL NIL))
   ((("f" "technicolor") NIL NIL NIL NIL NIL))))
 NIL NIL)
T
T

STREAMS/EXPR> (parse-explain "(@movie (@snow-white) :author (@walt) (f technicolor))")

 ATOM-SEQ: (@ movie)
 ATOM-VALUE: (((@ snow-white) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: (((: author) (((@ walt) NIL NIL NIL NIL NIL))
             (((f technicolor) NIL NIL NIL NIL NIL))))
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :birthday)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :birthday 1901)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: birthday) (1901) NIL))
 HASH: NIL
 COMMENT: NIL
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime9
; in: DEFUN =@-FORM
;     (LAMBDA (&OPTIONAL STREAMS/EXPR::VAL) (COND (STREAMS/EXPR::SAVED-VAL)))
; ==>
;   #'(LAMBDA (&OPTIONAL STREAMS/EXPR::VAL) (COND (STREAMS/EXPR::SAVED-VAL)))
;
; caught STYLE-WARNING:
;   The variable VAL is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition
WARNING: redefining STREAMS/EXPR::=@-FORM in DEFUN
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR>

; No value; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :birthday 1901)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: birthday) (1901) NIL))
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@movie (@snow-white) :author (@walt) (f technicolor))")

 ATOM-SEQ: (@ movie)
 ATOM-VALUE: (((@ snow-white) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: (((: author) (((@ walt) NIL NIL NIL NIL NIL))
             (((f technicolor) NIL NIL NIL NIL NIL))))
 HASH: NIL
 COMMENT: NIL
NIL
; compiling (QUICKLISP-CLIENT:QUICKLOAD :STREAMS)To load "streams":
  Load 1 ASDF system:
    streams
; Loading "streams"
...

STREAMS/EXPR> (parse-explain "(@movie (@snow-white) :author (@walt) (f technicolor))")

 ATOM-SEQ: (@ movie)
 ATOM-VALUE: (((@ snow-white) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: (((: author) (((@ walt) NIL NIL NIL NIL NIL))
             (((f technicolor) NIL NIL NIL NIL NIL))))
 HASH: NIL
 COMMENT: NIL
NIL
; compiling (DEFUN =@-FORM ...)
WARNING: redefining STREAMS/EXPR::=@-FORM in DEFUN
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse-explain "(@WALT (v my-book))")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (((v my-book) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT (m my-book))")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (((m my-book) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT (c my-book))")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (((c my-book) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse-explain "(@WALT (c my-book))")

NIL

STREAMS/EXPR> (parse-explain "(@WALT (m my-book))")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (((m my-book) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT (s my-book))")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (((s my-book) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-msl "(@WALT (s my-book))")
(("@" "WALT") ((("s" "my-book") NIL NIL NIL NIL NIL)) NIL NIL NIL NIL)
T
T
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse-explain "(@WALT (s my-book))")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (((s my-book) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT :wife (@LILLIAN))")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: NIL
 ATOM-MODS: NIL
 METADATA: (((: wife) (((@ LILLIAN) NIL NIL NIL NIL NIL)) NIL))
 HASH: NIL
 COMMENT: NIL
NIL
; compiling (DEFUN =CANON-FORM ...)
WARNING: redefining STREAMS/EXPR::=CANON-FORM in DEFUN
; compiling (DEFUN =CANON-FORM ...)
STREAMS/EXPR> (parse-explain "(c school-books)")

 ATOM-SEQ: (c school-books)
 ATOM-VALUE: NIL
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(c school-books (@ one-book))")

 ATOM-SEQ: (c school-books)
 ATOM-VALUE: (((@ one-book) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(c school-books (v one-book))")
NIL

STREAMS/EXPR> (parse-explain "(c school-books (s one-book))")
NIL

STREAMS/EXPR> (parse-explain "(c school-books (c one-book))")
NIL
; compiling (DEFUN =CANON-FORM ...)
STREAMS/EXPR> (parse-explain "(c school-books (c one-book))")

 ATOM-SEQ: (c school-books)
 ATOM-VALUE: (((c one-book) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL
; compiling (DEFUN =GROUPING-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime21
; in: DEFUN =GROUPING-FORM
;     (LAMBDA (STREAMS/EXPR::VAL) (COND (SYMBOL-VALUE 'STREAMS/EXPR::SAVED-VAL)))
; ==>
;   #'(LAMBDA (STREAMS/EXPR::VAL) (COND (SYMBOL-VALUE 'STREAMS/EXPR::SAVED-VAL)))
;
; caught STYLE-WARNING:
;   The variable VAL is defined but never used.

; file: C:/Users/David/AppData/Local/Temp/slime21
; in: DEFUN =GROUPING-FORM
;     (COND (SYMBOL-VALUE 'STREAMS/EXPR::SAVED-VAL))
; ==>
;   (IF SYMBOL-VALUE
;       'STREAMS/EXPR::SAVED-VAL
;       NIL)
;
; caught WARNING:
;   undefined variable: COMMON-LISP:SYMBOL-VALUE
;
; compilation unit finished
;   Undefined variable:
;     SYMBOL-VALUE
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition
WARNING: redefining STREAMS/EXPR::=GROUPING-FORM in DEFUN

STREAMS/EXPR> (parse-explain "(m david My Machine (v my-book))")

 ATOM-SEQ: (m david)
 ATOM-VALUE: (My Machine ((v my-book) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(m david My Machine (c my-stuff))")

 ATOM-SEQ: (m david)
 ATOM-VALUE: (My Machine ((c my-stuff) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(m david My Machine (c my-stuff (@p1 It was a dark and stormy night.)))")

 ATOM-SEQ: (m david)
 ATOM-VALUE: (My Machine
              ((c my-stuff)
               (((@ p1) (It was a dark and stormy night.) NIL NIL NIL NIL)) NIL
               NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(m david My Machine (c my-stuff (c another-book It was a dark and stormy night.)))")

 ATOM-SEQ: (m david)
 ATOM-VALUE: (My Machine (c my-stuff
              ((c another-book) (It was a dark and stormy night.) NIL NIL NIL
               NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(m david My Machine (c my-stuff (v another-book It was a dark and stormy night.)))")

 ATOM-SEQ: (m david)
 ATOM-VALUE: (My Machine (c my-stuff
              ((v another-book) (It was a dark and stormy night.) NIL NIL NIL
               NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(m david My Machine (c my-stuff (v another-book It was a dark and stormy night.)))")

 ATOM-SEQ: (m david)
 ATOM-VALUE: (My Machine (c my-stuff
              ((v another-book) (It was a dark and stormy night.) NIL NIL NIL
               NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(c my-canon)")

 ATOM-SEQ: (c my-canon)
 ATOM-VALUE: NIL
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(c my-canon (v not allowed))")
NIL

STREAMS/EXPR> (parse-explain "(c my-canon (c allowed))")

 ATOM-SEQ: (c my-canon)
 ATOM-VALUE: (((c allowed) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(m machine (c canon))")

 ATOM-SEQ: (m machine)
 ATOM-VALUE: (((c canon) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(m machine (c canon (v view)))")

 ATOM-SEQ: (m machine)
 ATOM-VALUE: ((c canon ((v view) NIL NIL NIL NIL NIL))
 ATOM-MODS: NIL
 METADATA: NIL
 HASH: NIL
 COMMENT: NIL
NIL
; compiling (DEFUN =GROUPING-FORM ...)
STREAMS/EXPR> (parse-explain "(c my-canon Some Value :sub)")

NIL

STREAMS/EXPR> (parse-explain "(c my-canon Some Value :sub subvalue)")

 ATOM-SEQ: (c my-canon)
 ATOM-VALUE: (Some Value)
 ATOM-MODS: NIL
 METADATA: (((: sub) (subvalue) NIL))
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(c my-canon :sub)")
NIL

STREAMS/EXPR> (parse-explain "(c my-canon :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")

NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub 1 :sub2 2)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: NIL
 ATOM-MODS: NIL
 METADATA: (((: sub) (1) NIL) ((: sub2) (2) NIL))
 HASH: NIL
 COMMENT: NIL
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime24
; in: DEFUN =@-FORM
;     (LAMBDA (STREAMS/EXPR::VAL) (COND ((NOT (NULL STREAMS/EXPR::SAVED-VAL)))))
; ==>
;   #'(LAMBDA (STREAMS/EXPR::VAL) (COND ((NOT (NULL STREAMS/EXPR::SAVED-VAL)))))
;
; caught STYLE-WARNING:
;   The variable VAL is defined but never used.

; file: C:/Users/David/AppData/Local/Temp/slime24
; in: DEFUN =@-FORM
;     (SETF STREAMS/EXPR::SAVED-VAL STREAMS/EXPR::VAL)
; ==>
;   (SETQ STREAMS/EXPR::SAVED-VAL STREAMS/EXPR::VAL)
;
; caught WARNING:
;   undefined variable: STREAMS/EXPR::SAVED-VAL
;
; compilation unit finished
;   Undefined variable:
;     SAVED-VAL
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT :sub 1 :sub2 2)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: NIL
 ATOM-MODS: NIL
 METADATA: (((: sub) 1 NIL) ((: sub2) 2 NIL))
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (DEFUN =@-FORM ...)
STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")

NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime26
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G14
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G14))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G14))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G14))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G14))
;          (STREAMS/EXPR::METADATA (POP #:G14))
;          (STREAMS/EXPR::HASH (POP #:G14))
;          (STREAMS/EXPR::COMMENT (POP #:G14))
;          (#:|_2| (POP #:G14)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub subval)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: sub) (subval) NIL))
 HASH: NIL
 COMMENT: (Walt Disney)
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub subval)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: sub) (subval) NIL))
 HASH: NIL
 COMMENT: (Walt Disney)
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime27
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G14
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G14))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G14))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G14))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G14))
;          (STREAMS/EXPR::METADATA (POP #:G14))
;          (STREAMS/EXPR::HASH (POP #:G14))
;          (STREAMS/EXPR::COMMENT (POP #:G14))
;          (#:|_2| (POP #:G14)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub value)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: NIL
 ATOM-MODS: NIL
 METADATA: (((: sub) (value) NIL))
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime28
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub value)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: NIL
 ATOM-MODS: NIL
 METADATA: (((: sub) (value) NIL))
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub value)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: NIL
 ATOM-MODS: NIL
 METADATA: (((: sub) (value) NIL))
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime29
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.

;     (LAMBDA (STREAMS/EXPR::VAL) (COND ((NOT STREAMS/EXPR::SAVED-VAL) T)))
; ==>
;   #'(LAMBDA (STREAMS/EXPR::VAL) (COND ((NOT STREAMS/EXPR::SAVED-VAL) T)))
;
; caught STYLE-WARNING:
;   The variable VAL is defined but never used.
;
; compilation unit finished
;   caught 2 STYLE-WARNING conditions

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime30
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime31
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime32
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime33
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime34
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (SETF (FDEFINITION #) ...)
STREAMS/EXPR> (parse-explain "(@WALT :sub)")

NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub subvalue)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: sub) (subvalue) NIL))
 HASH: NIL
 COMMENT: (Walt Disney)
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime36
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL
; compiling (QUICKLISP-CLIENT:QUICKLOAD :STREAMS)To load "streams":
  Load 1 ASDF system:
    streams
; Loading "streams"
...

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub subval1 :sub2 value2)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: sub) (subval1) NIL) ((: sub2) (value2) NIL))
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub)")
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime38
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition
WARNING: redefining STREAMS/EXPR::=@-FORM in DEFUN

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")
NIL
; compiling (SETF (FDEFINITION #) ...)
STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")

NIL
; compiling (DEFUN =@-FORM ...)

; file: C:/Users/David/AppData/Local/Temp/slime40
; in: DEFUN =@-FORM
;     (MAXPC:=DESTRUCTURE (STREAMS/EXPR::_ STREAMS/EXPR::ATOM-SEQ
;                          STREAMS/EXPR::ATOM-VALUE STREAMS/EXPR::ATOM-MODS
;                          STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;                          STREAMS/EXPR::COMMENT STREAMS/EXPR::_)
;         (MAXPC:=LIST (MAXPC:?EQ #\() (STREAMS/EXPR::=@-GETTER)
;                      (MAXPC:=TRANSFORM (MAXPC:%ANY (MAXPC:%OR # # #))
;                                        (LAMBDA (STREAMS/EXPR::VAL) (COND #)))
;                      (MAXPC:%ANY (STREAMS/EXPR::=ATOM-MODS))
;                      (MAXPC:%MAYBE
;                       (MAXPC:%OR (MAXPC:%SOME #)
;                                  (MAXPC:=DESTRUCTURE #
;                                      #
;                                    #)))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-HASH))
;                      (MAXPC:%MAYBE (STREAMS/EXPR::=MSL-COMMENT))
;                      (STREAMS/EXPR::?EXPRESSION-TERMINATOR))
;       (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;             STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;             STREAMS/EXPR::SAVED-VAL))
; --> MAXPC:=TRANSFORM LAMBDA FUNCTION DESTRUCTURING-BIND
; --> SB-INT:BINDING*
; ==>
;   (LET* ((#:G13
;           (SB-C::CHECK-DS-LIST #:|result0| 8 8
;                                '(#:|_1| STREAMS/EXPR::ATOM-SEQ
;                                  STREAMS/EXPR::ATOM-VALUE
;                                  STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA
;                                  STREAMS/EXPR::HASH STREAMS/EXPR::COMMENT
;                                  #:|_2|)))
;          (#:|_1| (POP #:G13))
;          (STREAMS/EXPR::ATOM-SEQ (POP #:G13))
;          (STREAMS/EXPR::ATOM-VALUE (POP #:G13))
;          (STREAMS/EXPR::ATOM-MODS (POP #:G13))
;          (STREAMS/EXPR::METADATA (POP #:G13))
;          (STREAMS/EXPR::HASH (POP #:G13))
;          (STREAMS/EXPR::COMMENT (POP #:G13))
;          (#:|_2| (POP #:G13)))
;     (DECLARE (IGNORE #:|_2| #:|_1|))
;     (LIST STREAMS/EXPR::ATOM-SEQ STREAMS/EXPR::ATOM-VALUE
;           STREAMS/EXPR::ATOM-MODS STREAMS/EXPR::METADATA STREAMS/EXPR::HASH
;           STREAMS/EXPR::SAVED-VAL))
;
; caught STYLE-WARNING:
;   The variable COMMENT is defined but never used.
;
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: sub) NIL NIL))
 HASH: NIL
 COMMENT: (Walt Disney)
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub subvalue)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: sub) (subvalue) NIL))
 HASH: NIL
 COMMENT: (Walt Disney)
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub (@subatom))")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: sub) (((@ subatom) NIL NIL NIL NIL NIL)) NIL))
 HASH: NIL
 COMMENT: (Walt Disney)
NIL

STREAMS/EXPR> (parse-explain "(@WALT :sub (@subatom))")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: NIL
 ATOM-MODS: NIL
 METADATA: (((: sub) (((@ subatom) NIL NIL NIL NIL NIL)) NIL))
 HASH: NIL
 COMMENT: NIL
NIL

STREAMS/EXPR> (parse-explain "(@WALT Walt Disney :sub)")

 ATOM-SEQ: (@ WALT)
 ATOM-VALUE: (Walt Disney)
 ATOM-MODS: NIL
 METADATA: (((: sub) NIL NIL))
 HASH: NIL
 COMMENT: (Walt Disney)
NIL

STREAMS/EXPR> 
